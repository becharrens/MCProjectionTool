global protocol InvalidHiddenGAction(role a, role b, role c) {
    mchoice {
        U from a to b;
        U from a to c;
    } or {
        U from c to b;
        U from a to c;
    }
}

global protocol DoubleRecursion(role a, role b, role c, role d, role e) {
    rec t1 {
        nat from a to b;
        rec t2 {
            mchoice {
                nat from c to e; continue t1;
            } or {
                nat from d to e; continue t1;
            } or {
                nat from e to d; continue t2;
            }
        }
    }
}

global protocol Controller(role input1, role input2, role processing, role routing, role output1, role output2) {
    rec X1 {
        mchoice {
            packet from input1 to processing;
            rec X2 {
                packet from processing to routing;
                mchoice {
                    packet from input1 to processing;
                    mchoice {
                        packet from routing to output1;
                        continue X2;
                    } or {
                        packet from routing to output2;
                        continue X2;
                    }
                } or {
                    packet from input2 to processing;
                    mchoice {
                        packet from routing to output1;
                        continue X2;
                    } or {
                        packet from routing to output2;
                        continue X2;
                    }
                } or {
                    packet from routing to output1;
                    continue X1;
                } or {
                    packet from routing to output2;
                    continue X1;
                }
            }
        } or {
            packet from input2 to processing;
            rec X2 {
                packet from processing to routing;
                mchoice {
                    packet from input1 to processing;
                    mchoice {
                        packet from routing to output1;
                        continue X2;
                    } or {
                        packet from routing to output2;
                        continue X2;
                    }
                } or {
                    packet from input2 to processing;
                    mchoice {
                        packet from routing to output1;
                        continue X2;
                    } or {
                        packet from routing to output2;
                        continue X2;
                    }
                } or {
                    packet from routing to output1;
                    continue X1;
                } or {
                    packet from routing to output2;
                    continue X1;
                }
            }
        }
    }
}
